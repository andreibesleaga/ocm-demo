import { APIResource } from "../core/resource.js";
import { APIPromise } from "../core/api-promise.js";
import { RequestOptions } from "../internal/request-options.js";
export declare class Profile extends APIResource {
    /**
     * Perform user authentication, returning a model which includes the users profile
     * and a JWT auth token to re-use in subsequent requests.
     *
     * @example
     * ```ts
     * const response = await client.profile.authenticate({
     *   emailaddress: 'string',
     *   password: 'string',
     * });
     * ```
     */
    authenticate(body?: ProfileAuthenticateParams | null | undefined, options?: RequestOptions): APIPromise<ProfileAuthenticateResponse>;
}
export interface ProfileAuthenticateResponse {
    Data: ProfileAuthenticateResponse.Data;
    Metadata: ProfileAuthenticateResponse.Metadata;
}
export declare namespace ProfileAuthenticateResponse {
    interface Data {
        /**
         * JWT Bearer Token to use in subsequent authenticated requests
         */
        access_token: string;
        /**
         * Full user profile, including non-public fields such as Email Address
         */
        UserProfile: Data.UserProfile;
    }
    namespace Data {
        /**
         * Full user profile, including non-public fields such as Email Address
         */
        interface UserProfile {
            DateCreated: string;
            ID: number;
            IsProfilePublic: boolean;
            Username: string;
            DateLastLogin?: string;
            EmailAddress?: string;
            Latitude?: number;
            Location?: string;
            Longitude?: number;
            Permissions?: string;
            Profile?: string;
            ProfileImageURL?: string;
            ReputationPoints?: number;
            WebsiteURL?: string;
        }
    }
    interface Metadata {
        StatusCode: number;
    }
}
export interface ProfileAuthenticateParams {
    emailaddress?: string;
    password?: string;
}
export declare namespace Profile {
    export { type ProfileAuthenticateResponse as ProfileAuthenticateResponse, type ProfileAuthenticateParams as ProfileAuthenticateParams, };
}
//# sourceMappingURL=profile.d.ts.map